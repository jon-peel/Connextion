@page "/Profile/{username}"
@inject ProfileViewModel ViewModel;

<main>
    @if (ViewModel.IsBusy)
    {
        <BusyIndicator/>
    }
    @if (!ViewModel.IsBusy)
    {
        <h2>@ViewModel.DisplayName</h2>
        @if (ViewModel.RelationshipStatus is { } rs)
        {
            <RelationshipStatus ViewModel="rs"/>
        }

        <section>
            <h3>Following</h3>
            <ul>
                @foreach (var u in ViewModel.Following)
                {
                    <li>
                        <UserProfileLink ViewModel="u"/>
                    </li>
                }
            </ul>
        </section>
        <section>
            <h3>Followers</h3>
            <ul>
                @foreach (var u in ViewModel.Followers)
                {
                    <li>
                        <UserProfileLink ViewModel="u"/>
                    </li>
                }
            </ul>
        </section>
        <section>
            <h3>Recent Posts</h3>
            @foreach (var post in ViewModel.LatestPosts)
            {
                <Post ViewModel="post"/>
            }
        </section>
    }
</main>

@code {
    [Parameter] public required string Username { get; init; }
    [CascadingParameter] public required AppState AppState { get; init; }

    protected override async Task OnParametersSetAsync()
    {
        if (AppState.CurrentUser is { } profile)
            await ViewModel.InitializeAsync(Username, profile).ConfigureAwait(false);
    }

}