@page "/Profile/{username}"
@using Connextion.OldD
@using Post = Connextion.Web.Components.Posts.Post
@inject UserProfileViewModel ViewModel;

<main>
    @if(ViewModel.IsBusy) { <BusyIndicator /> }
    @if (!ViewModel.IsBusy)
    {
        <h2>@ViewModel.DisplayName</h2>
        @if (ViewModel.RelationshipStatus is { } rs)
        {
            <RelationshipStatus ViewModel="rs"/>
        }

        <section>
            <h3>Following</h3>
            <ul>
                @foreach (var u in ViewModel.Following)
                {
                    <li>
                        <UserProfileLink ViewModel="u"/>
                    </li>
                }
            </ul>
        </section>
        <section>
            <h3>Followers</h3>
            <ul>
                @foreach (var u in ViewModel.Followers)
                {
                    <li>
                        <UserProfileLink ViewModel="u"/>
                    </li>
                }
            </ul>
        </section>
        <section>
            <h3>Recent Posts</h3>
            @foreach (var post in ViewModel.LatestPosts)
            {
                <Post ViewModel="post"/>
            }
        </section>
    }
</main>

@code {
    [Parameter] public required string Username { get; init; }
    [CascadingParameter(Name = "CurrentUser")] public required User User { get; init; }

    protected override Task OnParametersSetAsync() => ViewModel.InitializeAsync(Username, User);
}