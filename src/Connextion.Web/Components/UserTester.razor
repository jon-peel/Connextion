@inject IUserRepository UserRepository; 

@if (_users.Any())
{
    <InputSelect @bind-Value="_selectedusername" @oninput="UserSelected" >
        @foreach (var user in _users)
        {
            <option value="@user.username">@user.FullName</option>
        }
    </InputSelect>
    <hr/>
   
}
@if (_user is {} user)
{
<CascadingValue Value="user">
    @ChildContent
</CascadingValue>
}
@if (_user is null)
{
    <p>Setting User</p>
}


@code {
    UserDetails[] _users = [];
    UserDetails? _user = null;
    string _selectedusername = "";

    [Parameter] public RenderFragment ChildContent { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        var users = await UserRepository.GetUsernamesAsync().ConfigureAwait(false);
        _users = users.Select(x => new UserDetails(x.Username, x.FullName)).ToArray();
        _user = _users.FirstOrDefault();
        _selectedusername = _user?.username ?? "";
    }

    private async Task UserSelected(ChangeEventArgs arg)
    {
        _user = null;
        await Task.Delay(1000).ConfigureAwait(false);
        _user = _users.FirstOrDefault(x => x.username == arg.Value?.ToString());
    }
}

